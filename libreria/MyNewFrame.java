/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package libreria;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import javax.swing.SwingUtilities;

/**
 * Implementa il frame rincipale della libreria.
 * @author Marco
 */
public class MyNewFrame extends javax.swing.JFrame {
    private MyLibreria lib;
    private final String titolo="Libreria Multimediale";
    private MyTableModel modello;
    private final String salvare="libreria.dat";
    private DialogNotifica notifica;
    private String old;
    private int indice;
    private boolean trovato;
    private MyLibreria cercati;
    private boolean almenouno;

    /**
     * Creates new form MyNewFrame
     * @param lib
     */
    public MyNewFrame(MyLibreria lib) {
        this.lib=lib;
        initComponents(); 
        
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        modello = new MyTableModel(lib);
        jTable1 = new javax.swing.JTable();
        jTextCerca = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(titolo.toString());

        jTable1.setModel(modello);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Cerca");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenu3.setText("Aggiungi");

        jMenuItem1.setText("Brano Musicale");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenuItem2.setText("Video");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuItem3.setText("E-Book");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenu1.add(jMenu3);

        jMenu4.setText("Aggiungi cartella");

        jMenuItem8.setText("Brani Musicali");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem8);

        jMenuItem9.setText("Video");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem9);

        jMenuItem10.setText("E-Books");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem10);

        jMenu1.add(jMenu4);

        jMenuItem6.setText("Stampa");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem4.setText("Salva libreria");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setText("Carica libreria");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextCerca, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextCerca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Aggiungi Mp3.
     * 
     * Gestisce l'inserimento di un mp3.
     * 
     * @param evt 
     */
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        AggiungiFrame agg = new AggiungiFrame(1,lib,modello);
        agg.setVisible(true);
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * Aggiungi Video.
     * Gestisce l'inserimento di un video.
     * 
     * @param evt 
     */
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        AggiungiFrame agg = new AggiungiFrame(2,lib,modello);
        agg.setVisible(true);
       
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * Aggiungi PDF.
     * Gestisce l'inserimento di un PDF.
     * 
     * @param evt 
     */
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        AggiungiFrame agg = new AggiungiFrame(3,lib,modello);
        agg.setVisible(true);
       
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /**
     * Gestisce il salvataggio della libreria.
     * 
     * @param evt 
     */
    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        boolean sovrascrivo = true;
        if (new File(salvare).exists()){
        //vuoi sovrascrivere
           
            DialogSovrascrivo domanda = new DialogSovrascrivo(this,true);
            sovrascrivo=domanda.getRisposta();

        }
        
        if (sovrascrivo){
        String messaggio = "Salvataggio eseguito";
        for(int i=0; i<lib.size();i++)
            lib.get(i).stop();
        FileOutputStream f = null;
        try{
        
            f = new FileOutputStream(salvare);
            
        } catch (FileNotFoundException e)
        {messaggio= "ERRORE: Non è stato possibile aprire il file per il salvataggio!";
}
        ObjectOutputStream os = null;
         try {
            os = new ObjectOutputStream(f);
            os.writeObject(lib);
            os.flush();
            os.close();
        } catch (IOException e) {
            messaggio="ERRORE: Non è stato possibile scrivere sul file.";
            
        }
         notifica = new DialogNotifica(messaggio,this,true);
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    /**
     * Gestice il caricamento della libreria precedentemente salvata.
     * 
     * @param evt 
     */
    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        String messaggio = "Caricamento riuscito!";
        boolean ok=false;
        FileInputStream fin = null;
        ObjectInputStream is =null;
        if (new File(salvare).exists()){ok = true;}
        else
            {ok=false; messaggio="Nessuna libreria salvata precedentemente";}
        if(ok){
        try {
            fin = new FileInputStream(salvare);
            
        } catch (FileNotFoundException e) {
            messaggio="ERRORE: Non è stato possibile aprire il file per il caricamento!";
            ok=false;
        }
        }
        if(ok){
        lib=null;
        try {
            is=new ObjectInputStream(fin);
            lib = (MyLibreria)(is.readObject());
            is.close();
        } catch (IOException e) {
            messaggio="ERRORE: Non è stato possibile leggere il file per il caricamento!";
        } catch (ClassNotFoundException ex) {
            messaggio="ERRORE: Classe non trovata ";
        }
        }
        notifica = new DialogNotifica(messaggio,this,true);
        modello = new MyTableModel(lib);
        jTable1.setModel(modello);
        
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    /**
     * Gestisce le operazioni da effettuare per la ricerca.
     * Inizialmente controlla se la precedente ricerca è diversa dall'attuale in caso
     * affermativo procede con una nuova ricerca
     * altrimenti continua con la precedente.
     * 
     * Al termine della ricerca mostra una finestra di dialogo con i risultati
     * e ne permette la stampa.
     * @param evt 
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String cerca= jTextCerca.getText();
        Elemento el;
        if (!"".equals(cerca)){
        
            if (!cerca.equals(old)){
            
                old=cerca;
                indice=0;
                almenouno=false;
                cercati=new MyLibreria();
            }
            
            trovato=false;
            while(!trovato && indice<lib.size()){
            
                el=lib.get(indice);
                if((el.getTitolo().contains(cerca))||(el.getAutore().contains(cerca))||(String.valueOf(el.getAnno()).contains(cerca))){
                
                    trovato=true;
                    almenouno=true;
                    jTable1.changeSelection(indice, 1, false, false);
                    cercati.inserisci(el);
                    indice++;
                } else
                    indice++;
                
                if (indice==lib.size() && almenouno){
                
                    old="";
                    RisutatoRicerca tab = new RisutatoRicerca(this, true, cercati);
                }
            }    
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Gestisce la stampa della libreria.
     * 
     * @param evt 
     */
    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        try {
    if (!jTable1.print()) {
        
        notifica = new DialogNotifica("Stampa annullata dall'utente",this,true);
    }
} catch (java.awt.print.PrinterException e) {
    notifica = new DialogNotifica("ERRORE: impossibile stampare ",this,true);
}
    }//GEN-LAST:event_jMenuItem6ActionPerformed
/**
 * Gestisce le operazioni di click sulla tabella.
 * 
 * se è un doppio click esegue la riproduzione dell'elemento;
 * se è un click destro apre le inforazioni sul brano selezionato.
 * @param evt 
 */
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        BranoMusicale temp;
        int pos = jTable1.getSelectedRow();
        
                if(SwingUtilities.isRightMouseButton(evt)) {
//pulsante destro
                    if (pos<0) notifica= new DialogNotifica("Prima di modificare un file devi selezionarlo!",this,true);
                    else{
            VisualizzaInfo prova;
            prova = new VisualizzaInfo(lib,pos,modello);}
} else
        if (evt.getClickCount()==2){
            for(int i=0; i<lib.size();i++)
                {if(i!=pos) lib.get(i).stop();  }     
            lib.get(pos).play();

        }

    }//GEN-LAST:event_jTable1MouseClicked
/**
 * Aggiunge tutti i brani contenuti in una cartella
 * 
 * @param evt 
 */
    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        MyFolderChooser fol = new MyFolderChooser(1, lib, modello,this);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    /**
     * Aggiunge tutti i video contenuti in una cartella
     * @param evt 
     */
    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        MyFolderChooser fol = new MyFolderChooser(2, lib, modello,this);
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    /**
     * Aggiunge tutti i brani contenuti in una cartella
     * 
     * @param evt 
     */
    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        MyFolderChooser fol = new MyFolderChooser(3, lib, modello,this);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextCerca;
    // End of variables declaration//GEN-END:variables
}
